#! /bin/sh
. ~/bin/panel/config

# check if bar is already running
if xdo id -a "$panelwmname" > /dev/null ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

# trap the signal? but why?
trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

# check the pipe file. if it exists delete it and make a new one.
[ -e "$panelfifo" ] && rm "$panelfifo"
mkfifo "$panelfifo"

# Get the info from apps, pipe them all to fifo. fork them to run in bg
bspc subscribe report > "$panelfifo" &
xtitle -sf 'T%s' -t 40 > "$panelfifo" &
info.sh > "$panelfifo" &

# calculate gap
currmonwidth=$(bspc query -T -m | jshon -e rectangle -e width -u)
panelwidth=$(( currmonwidth - $((panelgap * 2 )) ))

bspc config top_padding $panelheight # top padding

# Start panel_bar, pipe output into lemonbar, then to sh
panel_bar < "$panelfifo" | lemonbar -a 32 -n "$panelwmname" \
	-g "$panelwidth"x"$panelheight"+$panelgap+0 \
	-f "$panelfont1" -f "$panelfont2" -f "$panelicon" \
	-F "$default_fg" -B "$default_bg" | sh &

# Try to get the wid
wid=$(xdo id -a "$panelwmname")
tries_left=20
while [ -z "$wid" -a "$tries_left" -gt 0 ] ; do
	sleep 0.05
	wid=$(xdo id -a "$panelwmname")
	tries_left=$((tries_left - 1))
done
## Use the wid, put the panel above bspwm to make sure
[ -n "$wid" ] && xdo above -t "$(xdo id -N Bspwm -n root | sort | head -n 1)" "$wid"

wait
